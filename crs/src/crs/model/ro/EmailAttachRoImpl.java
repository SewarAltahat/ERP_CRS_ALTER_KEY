package crs.model.ro;

import crs.model.ro.EmailAttachRoRowImpl.AttributesEnum;

import java.sql.ResultSet;

import java.sql.SQLException;

import java.util.Collection;

import oracle.jbo.Key;
import oracle.jbo.RangePagingDataFilter;
import oracle.jbo.ScrollableDataFilter;
import oracle.jbo.server.ProgrammaticViewObjectImpl;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jun 19 10:50:50 GMT+03:00 2023
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class EmailAttachRoImpl
  extends ProgrammaticViewObjectImpl
{
  /**
   * This is the default constructor (do not remove).
   */
  public EmailAttachRoImpl()
  {
  }

  /**
   * getRangePagingData - for custom java data source support.
   */
  public Collection<Object> getRangePagingData(RangePagingDataFilter filter)
  {
    Collection<Object> value = super.getRangePagingData(filter);
    return value;
  }
  private ArrayList<Map<String, String>> emailattribute;

  /**
   * retrieveDataByKey - for custom java data source support.
   */
  public Collection<Object> retrieveDataByKey(Key key, int size)
  {
    Collection<Object> value = super.retrieveDataByKey(key, size);
    return value;
  }


  /**
   * getScrollableData - for custom java data source support.
   */

  public Collection<Object> getScrollableData(ScrollableDataFilter filter)
  {

    ArrayList<Object> rows = new ArrayList<Object>();

    HashMap<Object, Object> row = new HashMap<Object, Object>();

    row.put("FileName", null);

    row.put("FilePath", null);

    return rows;

  }


  @Override
  protected void executeQueryForCollection(Object qc, Object[] params, int noUserParams)
  {
    

    Map<String, String> emailData = new HashMap<String, String>();
    emailattribute = new ArrayList<Map<String, String>>();
    // emailattribute.add(new EmailAttribute  ("File","null"));
    emailData.put("FileName", null);
    emailData.put("FilePath", null);
    emailattribute.add(emailData);


    super.executeQueryForCollection(qc, params, noUserParams);
  }


  protected void create()
  {
    super.create();

    // Wipe out all traces of a query for this VO
    getViewDef().setQuery(null);
    getViewDef().setSelectClause(null);
    setQuery(null);
  }
 

  private void setFetchPos(Object rowset, int pos)
  {
    if (pos == emailattribute.size())
    {
      setFetchCompleteForCollection(rowset, true);
    }
    setUserDataForCollection(rowset, new Integer(pos));
  }

  private int getFetchPos(Object rowset)
  {
    return ((Integer) getUserDataForCollection(rowset)).intValue();
  }


}

