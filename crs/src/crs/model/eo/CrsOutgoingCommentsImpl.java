package crs.model.eo;

import gen.common.GenLib;

import java.math.BigDecimal;
import java.sql.Timestamp;

import java.util.List;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Apr 01 13:34:31 GMT+03:00 2023
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CrsOutgoingCommentsImpl
  extends AuditEntityImpl
{
  /**
   * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
   */
  protected enum AttributesEnum
  {
    OutgoingCommentsPk,
    OutgoingDocumentsFk,
    CreatedBy,
    CreationDate,
    ModifiedBy,
    ModifiedDate,
    UserDepartmentFk,
    DisplayCommentValue,
    OutgoingDocPreparationFk,
    CrsOutgoingCommentsTl,
    CrsOutgoingDocuments,
    CrsOutgoingDocPreparation;
    private static AttributesEnum[] vals = null;
    private static final int firstIndex = 0;

    protected int index()
    {
      return AttributesEnum.firstIndex() + ordinal();
    }

    protected static final int firstIndex()
    {
      return firstIndex;
    }

    protected static int count()
    {
      return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
    }

    protected static final AttributesEnum[] staticValues()
    {
      if (vals == null)
      {
        vals = AttributesEnum.values();
      }
      return vals;
    }
  }

  public static final int OUTGOINGCOMMENTSPK = AttributesEnum.OutgoingCommentsPk.index();
  public static final int OUTGOINGDOCUMENTSFK = AttributesEnum.OutgoingDocumentsFk.index();
  public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
  public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
  public static final int MODIFIEDBY = AttributesEnum.ModifiedBy.index();
  public static final int MODIFIEDDATE = AttributesEnum.ModifiedDate.index();
  public static final int USERDEPARTMENTFK = AttributesEnum.UserDepartmentFk.index();
  public static final int DISPLAYCOMMENTVALUE = AttributesEnum.DisplayCommentValue.index();
  public static final int OUTGOINGDOCPREPARATIONFK = AttributesEnum.OutgoingDocPreparationFk.index();
  public static final int CRSOUTGOINGCOMMENTSTL = AttributesEnum.CrsOutgoingCommentsTl.index();
  public static final int CRSOUTGOINGDOCUMENTS = AttributesEnum.CrsOutgoingDocuments.index();
  public static final int CRSOUTGOINGDOCPREPARATION = AttributesEnum.CrsOutgoingDocPreparation.index();

  /**
   * This is the default constructor (do not remove).
   */
  public CrsOutgoingCommentsImpl()
  {
  }

  /**
   * @return the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject()
  {
    return EntityDefImpl.findDefObject("crs.model.eo.CrsOutgoingComments");
  }

  /**
   * Gets the attribute value for OutgoingCommentsPk, using the alias name OutgoingCommentsPk.
   * @return the value of OutgoingCommentsPk
   */
  public BigDecimal getOutgoingCommentsPk()
  {
    return (BigDecimal) getAttributeInternal(OUTGOINGCOMMENTSPK);
  }

  /**
   * Sets <code>value</code> as the attribute value for OutgoingCommentsPk.
   * @param value value to set the OutgoingCommentsPk
   */
  public void setOutgoingCommentsPk(BigDecimal value)
  {
    setAttributeInternal(OUTGOINGCOMMENTSPK, value);
  }

  /**
   * Gets the attribute value for OutgoingDocumentsFk, using the alias name OutgoingDocumentsFk.
   * @return the value of OutgoingDocumentsFk
   */
  public BigDecimal getOutgoingDocumentsFk()
  {
    return (BigDecimal) getAttributeInternal(OUTGOINGDOCUMENTSFK);
  }

  /**
   * Sets <code>value</code> as the attribute value for OutgoingDocumentsFk.
   * @param value value to set the OutgoingDocumentsFk
   */
  public void setOutgoingDocumentsFk(BigDecimal value)
  {
    setAttributeInternal(OUTGOINGDOCUMENTSFK, value);
  }

  /**
   * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
   * @return the value of CreatedBy
   */
  public BigDecimal getCreatedBy()
  {
    return (BigDecimal) getAttributeInternal(CREATEDBY);
  }

  /**
   * Sets <code>value</code> as the attribute value for CreatedBy.
   * @param value value to set the CreatedBy
   */
  public void setCreatedBy(BigDecimal value)
  {
    setAttributeInternal(CREATEDBY, value);
  }

  /**
   * Gets the attribute value for CreationDate, using the alias name CreationDate.
   * @return the value of CreationDate
   */
  public Timestamp getCreationDate()
  {
    return (Timestamp) getAttributeInternal(CREATIONDATE);
  }

  /**
   * Sets <code>value</code> as the attribute value for CreationDate.
   * @param value value to set the CreationDate
   */
  public void setCreationDate(Timestamp value)
  {
    setAttributeInternal(CREATIONDATE, value);
  }

  /**
   * Gets the attribute value for ModifiedBy, using the alias name ModifiedBy.
   * @return the value of ModifiedBy
   */
  public BigDecimal getModifiedBy()
  {
    return (BigDecimal) getAttributeInternal(MODIFIEDBY);
  }

  /**
   * Sets <code>value</code> as the attribute value for ModifiedBy.
   * @param value value to set the ModifiedBy
   */
  public void setModifiedBy(BigDecimal value)
  {
    setAttributeInternal(MODIFIEDBY, value);
  }

  /**
   * Gets the attribute value for ModifiedDate, using the alias name ModifiedDate.
   * @return the value of ModifiedDate
   */
  public Timestamp getModifiedDate()
  {
    return (Timestamp) getAttributeInternal(MODIFIEDDATE);
  }

  /**
   * Sets <code>value</code> as the attribute value for ModifiedDate.
   * @param value value to set the ModifiedDate
   */
  public void setModifiedDate(Timestamp value)
  {
    setAttributeInternal(MODIFIEDDATE, value);
  }

  /**
   * Gets the attribute value for UserDepartmentFk, using the alias name UserDepartmentFk.
   * @return the value of UserDepartmentFk
   */
  public BigDecimal getUserDepartmentFk()
  {
    return (BigDecimal) getAttributeInternal(USERDEPARTMENTFK);
  }

  /**
   * Sets <code>value</code> as the attribute value for UserDepartmentFk.
   * @param value value to set the UserDepartmentFk
   */
  public void setUserDepartmentFk(BigDecimal value)
  {
    setAttributeInternal(USERDEPARTMENTFK, value);
  }

  /**
   * Gets the attribute value for DisplayCommentValue, using the alias name DisplayCommentValue.
   * @return the value of DisplayCommentValue
   */
  public String getDisplayCommentValue()
  {
    return (String) getAttributeInternal(DISPLAYCOMMENTVALUE);
  }

  /**
   * Sets <code>value</code> as the attribute value for DisplayCommentValue.
   * @param value value to set the DisplayCommentValue
   */
  public void setDisplayCommentValue(String value)
  {
    setAttributeInternal(DISPLAYCOMMENTVALUE, value);
  }

  /**
   * Gets the attribute value for OutgoingDocPreparationFk, using the alias name OutgoingDocPreparationFk.
   * @return the value of OutgoingDocPreparationFk
   */
  public BigDecimal getOutgoingDocPreparationFk()
  {
    return (BigDecimal) getAttributeInternal(OUTGOINGDOCPREPARATIONFK);
  }

  /**
   * Sets <code>value</code> as the attribute value for OutgoingDocPreparationFk.
   * @param value value to set the OutgoingDocPreparationFk
   */
  public void setOutgoingDocPreparationFk(BigDecimal value)
  {
    setAttributeInternal(OUTGOINGDOCPREPARATIONFK, value);
  }

  /**
   * @return the associated entity oracle.jbo.RowIterator.
   */
  public RowIterator getCrsOutgoingCommentsTl()
  {
    return (RowIterator) getAttributeInternal(CRSOUTGOINGCOMMENTSTL);
  }

  /**
   * @return the associated entity CrsOutgoingDocumentsImpl.
   */
  public CrsOutgoingDocumentsImpl getCrsOutgoingDocuments()
  {
    return (CrsOutgoingDocumentsImpl) getAttributeInternal(CRSOUTGOINGDOCUMENTS);
  }

  /**
   * Sets <code>value</code> as the associated entity CrsOutgoingDocumentsImpl.
   */
  public void setCrsOutgoingDocuments(CrsOutgoingDocumentsImpl value)
  {
    setAttributeInternal(CRSOUTGOINGDOCUMENTS, value);
  }

  /**
   * @return the associated entity CrsOutgoingDocPreparationImpl.
   */
  public CrsOutgoingDocPreparationImpl getCrsOutgoingDocPreparation()
  {
    return (CrsOutgoingDocPreparationImpl) getAttributeInternal(CRSOUTGOINGDOCPREPARATION);
  }

  /**
   * Sets <code>value</code> as the associated entity CrsOutgoingDocPreparationImpl.
   */
  public void setCrsOutgoingDocPreparation(CrsOutgoingDocPreparationImpl value)
  {
    setAttributeInternal(CRSOUTGOINGDOCPREPARATION, value);
  }

  /**
   * @param outgoingCommentsPk key constituent

   * @return a Key object based on given key constituents.
   */
  public static Key createPrimaryKey(BigDecimal outgoingCommentsPk)
  {
    return new Key(new Object[] { outgoingCommentsPk });
  }

  protected void doDML(int operation, oracle.jbo.server.TransactionEvent e){
    
    super.doDML(operation, e);

    if (operation == DML_INSERT){
      BigDecimal outgoingCommentPk = gen.common.GenLib.getPrimaryKeyValue(getDBTransaction(), "CRS_OUTGOING_COMMENTS_SEQ");
      setOutgoingCommentsPk(outgoingCommentPk);
      insertIntoCrsOutgoingCommentsTl();
    }
  }
  
  private void insertIntoCrsOutgoingCommentsTl(){
    oracle.jbo.server.EntityDefImpl crsOutgoingCommentsTlDef = CrsOutgoingCommentsTlImpl.getDefinitionObject();
    List<Integer> activeLanguages = GenLib.getActiveDataLanguages(getDBTransaction());
    for (Integer languageId : activeLanguages){
      CrsOutgoingCommentsTlImpl crsOutgoingCommentsTl = (CrsOutgoingCommentsTlImpl) crsOutgoingCommentsTlDef.
                                                                                      createInstance2(getDBTransaction(), null);
      crsOutgoingCommentsTl.setLanguagesFk(BigDecimal.valueOf(languageId));
      crsOutgoingCommentsTl.setOutgoingCommentsFk(getOutgoingCommentsPk());
      crsOutgoingCommentsTl.setCommentValue(getDisplayCommentValue());
    }
  }

  public void remove(){
    gen.common.GenLib.removeTranlationRows(getCrsOutgoingCommentsTl());
    super.remove();
  }
}