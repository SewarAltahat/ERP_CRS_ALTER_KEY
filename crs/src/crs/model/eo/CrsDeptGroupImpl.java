package crs.model.eo;

import com.sd.hijri.common.HijriUtil;

import crs.common.Constants;

import gen.common.GenLib;

import java.math.BigDecimal;

import java.sql.Date;
import java.sql.Timestamp;

import java.util.List;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jul 03 17:04:09 GMT+03:00 2023
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CrsDeptGroupImpl
  extends AuditEntityImpl
{
  /**
   * Validation method for StartDate.
   */
  public boolean validateStartDate(Date startdate)
  {
    if (startdate!=null && getEndDate()!=null)
    {
      if (startdate.compareTo(getEndDate())==1)
      {
        throw new JboException(GenLib.getMessage("error.CompareDates")); 

      }
    }
    return true;
  }

  /**
   * Validation method for EndDate.
   */
  public boolean validateEndDate(Date enddate)
  {
    if (enddate!=null && getStartDate()!=null)
    {
      if (getStartDate().compareTo(enddate)==1)
      {
        throw new JboException(GenLib.getMessage("error.CompareDates")); 

      }
    }
    return true;
}

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    enum AttributesEnum
  {
    DeptGroupPk,
    CreatedBy,
    CreationDate,
    ModifiedBy,
    ModifiedDate,
    UserDepartmentFk,
    ActiveFl,
    DisplayGroupName,
    StartDate,
    EndDate,
    CrsDeptGroupDepts,
    CrsDeptGroupTl;
    private static AttributesEnum[] vals = null;
    private static final int firstIndex = 0;

    protected int index()
    {
      return AttributesEnum.firstIndex() + ordinal();
    }

    protected static final int firstIndex()
    {
      return firstIndex;
    }

    protected static int count()
    {
      return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
    }

    protected static final AttributesEnum[] staticValues()
    {
      if (vals == null)
      {
        vals = AttributesEnum.values();
      }
      return vals;
    }
  }


  public static final int DEPTGROUPPK = AttributesEnum.DeptGroupPk.index();
  public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
  public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
  public static final int MODIFIEDBY = AttributesEnum.ModifiedBy.index();
  public static final int MODIFIEDDATE = AttributesEnum.ModifiedDate.index();
  public static final int USERDEPARTMENTFK = AttributesEnum.UserDepartmentFk.index();
  public static final int ACTIVEFL = AttributesEnum.ActiveFl.index();
  public static final int DISPLAYGROUPNAME = AttributesEnum.DisplayGroupName.index();
  public static final int STARTDATE = AttributesEnum.StartDate.index();
  public static final int ENDDATE = AttributesEnum.EndDate.index();
  public static final int CRSDEPTGROUPDEPTS = AttributesEnum.CrsDeptGroupDepts.index();
  public static final int CRSDEPTGROUPTL = AttributesEnum.CrsDeptGroupTl.index();

  /**
   * This is the default constructor (do not remove).
   */
  public CrsDeptGroupImpl()
  {
  }

  /**
   * @return the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject()
  {
    return EntityDefImpl.findDefObject("crs.model.eo.CrsDeptGroup");
  }


  /**
   * Gets the attribute value for DeptGroupPk, using the alias name DeptGroupPk.
   * @return the value of DeptGroupPk
   */
  public BigDecimal getDeptGroupPk()
  {
    return (BigDecimal) getAttributeInternal(DEPTGROUPPK);
  }

  /**
   * Sets <code>value</code> as the attribute value for DeptGroupPk.
   * @param value value to set the DeptGroupPk
   */
  public void setDeptGroupPk(BigDecimal value)
  {
    setAttributeInternal(DEPTGROUPPK, value);
  }

  /**
   * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
   * @return the value of CreatedBy
   */
  public BigDecimal getCreatedBy()
  {
    return (BigDecimal) getAttributeInternal(CREATEDBY);
  }

  /**
   * Sets <code>value</code> as the attribute value for CreatedBy.
   * @param value value to set the CreatedBy
   */
  public void setCreatedBy(BigDecimal value)
  {
    setAttributeInternal(CREATEDBY, value);
  }

  /**
   * Gets the attribute value for CreationDate, using the alias name CreationDate.
   * @return the value of CreationDate
   */
  public Timestamp getCreationDate()
  {
    return (Timestamp) getAttributeInternal(CREATIONDATE);
  }

  /**
   * Sets <code>value</code> as the attribute value for CreationDate.
   * @param value value to set the CreationDate
   */
  public void setCreationDate(Timestamp value)
  {
    setAttributeInternal(CREATIONDATE, value);
  }

  /**
   * Gets the attribute value for ModifiedBy, using the alias name ModifiedBy.
   * @return the value of ModifiedBy
   */
  public BigDecimal getModifiedBy()
  {
    return (BigDecimal) getAttributeInternal(MODIFIEDBY);
  }

  /**
   * Sets <code>value</code> as the attribute value for ModifiedBy.
   * @param value value to set the ModifiedBy
   */
  public void setModifiedBy(BigDecimal value)
  {
    setAttributeInternal(MODIFIEDBY, value);
  }

  /**
   * Gets the attribute value for ModifiedDate, using the alias name ModifiedDate.
   * @return the value of ModifiedDate
   */
  public Timestamp getModifiedDate()
  {
    return (Timestamp) getAttributeInternal(MODIFIEDDATE);
  }

  /**
   * Sets <code>value</code> as the attribute value for ModifiedDate.
   * @param value value to set the ModifiedDate
   */
  public void setModifiedDate(Timestamp value)
  {
    setAttributeInternal(MODIFIEDDATE, value);
  }

  /**
   * Gets the attribute value for UserDepartmentFk, using the alias name UserDepartmentFk.
   * @return the value of UserDepartmentFk
   */
  public BigDecimal getUserDepartmentFk()
  {
    return (BigDecimal) getAttributeInternal(USERDEPARTMENTFK);
  }

  /**
   * Sets <code>value</code> as the attribute value for UserDepartmentFk.
   * @param value value to set the UserDepartmentFk
   */
  public void setUserDepartmentFk(BigDecimal value)
  {
    setAttributeInternal(USERDEPARTMENTFK, value);
  }

  /**
   * Gets the attribute value for ActiveFl, using the alias name ActiveFl.
   * @return the value of ActiveFl
   */
  public BigDecimal getActiveFl()
  {
    return (BigDecimal) getAttributeInternal(ACTIVEFL);
  }

  /**
   * Sets <code>value</code> as the attribute value for ActiveFl.
   * @param value value to set the ActiveFl
   */
  public void setActiveFl(BigDecimal value)
  {
    setAttributeInternal(ACTIVEFL, value);
  }

  /**
   * Gets the attribute value for DisplayGroupName, using the alias name DisplayGroupName.
   * @return the value of DisplayGroupName
   */
  public String getDisplayGroupName()
  {
    return (String) getAttributeInternal(DISPLAYGROUPNAME);
  }

  /**
   * Sets <code>value</code> as the attribute value for DisplayGroupName.
   * @param value value to set the DisplayGroupName
   */
  public void setDisplayGroupName(String value)
  {
    setAttributeInternal(DISPLAYGROUPNAME, value);
  }

  /**
   * Gets the attribute value for StartDate, using the alias name StartDate.
   * @return the value of StartDate
   */
  public Date getStartDate()
  {
    return (Date) getAttributeInternal(STARTDATE);
  }

  /**
   * Sets <code>value</code> as the attribute value for StartDate.
   * @param value value to set the StartDate
   */
  public void setStartDate(Date value)
  {
    setAttributeInternal(STARTDATE, value);
  }

  /**
   * Gets the attribute value for EndDate, using the alias name EndDate.
   * @return the value of EndDate
   */
  public Date getEndDate()
  {
    return (Date) getAttributeInternal(ENDDATE);
  }

  /**
   * Sets <code>value</code> as the attribute value for EndDate.
   * @param value value to set the EndDate
   */
  public void setEndDate(Date value)
  {
    setAttributeInternal(ENDDATE, value);
  }

  /**
   * @return the associated entity oracle.jbo.RowIterator.
   */
  public RowIterator getCrsDeptGroupDepts()
  {
    return (RowIterator) getAttributeInternal(CRSDEPTGROUPDEPTS);
  }

  /**
   * @return the associated entity oracle.jbo.RowIterator.
   */
  public RowIterator getCrsDeptGroupTl()
  {
    return (RowIterator) getAttributeInternal(CRSDEPTGROUPTL);
  }


  /**
   * @param deptGroupPk key constituent

   * @return a Key object based on given key constituents.
   */
  public static Key createPrimaryKey(BigDecimal deptGroupPk)
  {
    return new Key(new Object[] { deptGroupPk });
  }

  protected void create(AttributeList attributeList)
  {
    super.create(attributeList);
    setUserDepartmentFk(GenLib.getUserLoginDepartment());
    setActiveFl(new BigDecimal(Constants.ACTIVE));
  }
  
 
  protected void doDML(int operation, oracle.jbo.server.TransactionEvent e)
  {
    super.doDML(operation, e);

    if ( operation == DML_INSERT )
    {
      BigDecimal deptGroupPk = gen.common.GenLib.getPrimaryKeyValue(getDBTransaction(), "CRS_DEPT_GROUP_SEQ");
      setDeptGroupPk(deptGroupPk);
      insertToCrsDeptGroupTl();
      
    }
  }

  private void insertToCrsDeptGroupTl()
  { 
      oracle.jbo.server.EntityDefImpl crsDeptGroupTlDefinition = CrsDeptGroupTlImpl.getDefinitionObject();
      List<Integer> activeLanguages = GenLib.getActiveDataLanguages(getDBTransaction());
      for (Integer languageId : activeLanguages) {
          CrsDeptGroupTlImpl crsDeptGroupTl = (CrsDeptGroupTlImpl)crsDeptGroupTlDefinition.createInstance2(getDBTransaction(), null);
          crsDeptGroupTl.setLanguagesFk(BigDecimal.valueOf(languageId));
          crsDeptGroupTl.setDeptGroupFk(getDeptGroupPk());
          crsDeptGroupTl.setGroupName(getDisplayGroupName());
        }
    }
  public void remove()
  {
    gen.common.GenLib.removeTranlationRows(getCrsDeptGroupTl());
    super.remove();
  }
}