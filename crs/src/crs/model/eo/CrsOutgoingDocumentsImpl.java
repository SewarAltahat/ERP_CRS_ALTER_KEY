package crs.model.eo;

import com.sd.hijri.common.HijriUtil;

import com.sd.util.adf.ADFUtils;
import com.sd.util.db.DBUtil;

import crs.common.Constants;

import crs.common.ControllerUtil;

import gen.common.GenLib;

import gen.common.Settings;

import java.math.BigDecimal;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;

import java.util.List;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.server.DBTransaction;
import oracle.jbo.server.DBTransactionImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Apr 01 13:34:37 GMT+03:00 2023
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CrsOutgoingDocumentsImpl
  extends AuditEntityImpl
{
  /**
   * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
   */
  protected enum AttributesEnum
  {
    OutgoingDocumentsPk,
    OutDocYear,
    OutgoingTypeFk,
    OutDocNo,
    OutDocDateG,
    OutDocDateH,
    OutDocTypeFk,
    FromDepartmentFk,
    ToDepartmentFk,
    PriorityFk,
    RespondPeriod,
    AttachmentsNo,
    IncomingDocumentsFk,
    FilesLocationFk,
    Barcode,
    SecurityLevelFk,
    ReceivedDateG,
    ReceivedDateH,
    CreatedBy,
    CreationDate,
    ModifiedBy,
    ModifiedDate,
    UserDepartmentFk,
    ClassificationFk,
    DisplayOutSubject,
    DisplayKeyword,
    DisplayNotes,
    OutText,
    OutgoingDocumentsNo,
    RejectedFk,
    RejectedFl,
    RejectedReason,
    SupplyFl,
    DistributionTypeFk,
    OutingDocStsFk,
    NumberingDependencyFk,
    CrsOutgoingBeneficiaries,
    CrsDocumentsDelivery,
    CrsBorrowRequests,
    CrsOutgoingArchive,
    CrsIncomingDocuments,
    CrsIncomingRelatedLetters,
    CrsOutgoingComments,
    CrsIncomingDocuments1,
    CrsFilesLocation,
    CrsOutgoingDocumentsTl,
    CrsOutgoingDocAttachments,
    CrsOutgoingDocCc,
    CrsOutgoingDocPreparation,
    CrsOutgoingRelatedLetters,
    CrsOutgoingRelatedLetters1,
    HcmDepartments,
    HcmDepartments1;
    private static AttributesEnum[] vals = null;
    private static final int firstIndex = 0;

    protected int index()
    {
      return AttributesEnum.firstIndex() + ordinal();
    }

    protected static final int firstIndex()
    {
      return firstIndex;
    }

    protected static int count()
    {
      return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
    }

    protected static final AttributesEnum[] staticValues()
    {
      if (vals == null)
      {
        vals = AttributesEnum.values();
      }
      return vals;
    }
  }


  public static final int OUTGOINGDOCUMENTSPK = AttributesEnum.OutgoingDocumentsPk.index();
  public static final int OUTDOCYEAR = AttributesEnum.OutDocYear.index();
  public static final int OUTGOINGTYPEFK = AttributesEnum.OutgoingTypeFk.index();
  public static final int OUTDOCNO = AttributesEnum.OutDocNo.index();
  public static final int OUTDOCDATEG = AttributesEnum.OutDocDateG.index();
  public static final int OUTDOCDATEH = AttributesEnum.OutDocDateH.index();
  public static final int OUTDOCTYPEFK = AttributesEnum.OutDocTypeFk.index();
  public static final int FROMDEPARTMENTFK = AttributesEnum.FromDepartmentFk.index();
  public static final int TODEPARTMENTFK = AttributesEnum.ToDepartmentFk.index();
  public static final int PRIORITYFK = AttributesEnum.PriorityFk.index();
  public static final int RESPONDPERIOD = AttributesEnum.RespondPeriod.index();
  public static final int ATTACHMENTSNO = AttributesEnum.AttachmentsNo.index();
  public static final int INCOMINGDOCUMENTSFK = AttributesEnum.IncomingDocumentsFk.index();
  public static final int FILESLOCATIONFK = AttributesEnum.FilesLocationFk.index();
  public static final int BARCODE = AttributesEnum.Barcode.index();
  public static final int SECURITYLEVELFK = AttributesEnum.SecurityLevelFk.index();
  public static final int RECEIVEDDATEG = AttributesEnum.ReceivedDateG.index();
  public static final int RECEIVEDDATEH = AttributesEnum.ReceivedDateH.index();
  public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
  public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
  public static final int MODIFIEDBY = AttributesEnum.ModifiedBy.index();
  public static final int MODIFIEDDATE = AttributesEnum.ModifiedDate.index();
  public static final int USERDEPARTMENTFK = AttributesEnum.UserDepartmentFk.index();
  public static final int CLASSIFICATIONFK = AttributesEnum.ClassificationFk.index();
  public static final int DISPLAYOUTSUBJECT = AttributesEnum.DisplayOutSubject.index();
  public static final int DISPLAYKEYWORD = AttributesEnum.DisplayKeyword.index();
  public static final int DISPLAYNOTES = AttributesEnum.DisplayNotes.index();
  public static final int OUTTEXT = AttributesEnum.OutText.index();
  public static final int OUTGOINGDOCUMENTSNO = AttributesEnum.OutgoingDocumentsNo.index();
  public static final int REJECTEDFK = AttributesEnum.RejectedFk.index();
  public static final int REJECTEDFL = AttributesEnum.RejectedFl.index();
  public static final int REJECTEDREASON = AttributesEnum.RejectedReason.index();
  public static final int SUPPLYFL = AttributesEnum.SupplyFl.index();
  public static final int DISTRIBUTIONTYPEFK = AttributesEnum.DistributionTypeFk.index();
  public static final int OUTINGDOCSTSFK = AttributesEnum.OutingDocStsFk.index();
  public static final int NUMBERINGDEPENDENCYFK = AttributesEnum.NumberingDependencyFk.index();
  public static final int CRSOUTGOINGBENEFICIARIES = AttributesEnum.CrsOutgoingBeneficiaries.index();
  public static final int CRSDOCUMENTSDELIVERY = AttributesEnum.CrsDocumentsDelivery.index();
  public static final int CRSBORROWREQUESTS = AttributesEnum.CrsBorrowRequests.index();
  public static final int CRSOUTGOINGARCHIVE = AttributesEnum.CrsOutgoingArchive.index();
  public static final int CRSINCOMINGDOCUMENTS = AttributesEnum.CrsIncomingDocuments.index();
  public static final int CRSINCOMINGRELATEDLETTERS = AttributesEnum.CrsIncomingRelatedLetters.index();
  public static final int CRSOUTGOINGCOMMENTS = AttributesEnum.CrsOutgoingComments.index();
  public static final int CRSINCOMINGDOCUMENTS1 = AttributesEnum.CrsIncomingDocuments1.index();
  public static final int CRSFILESLOCATION = AttributesEnum.CrsFilesLocation.index();
  public static final int CRSOUTGOINGDOCUMENTSTL = AttributesEnum.CrsOutgoingDocumentsTl.index();
  public static final int CRSOUTGOINGDOCATTACHMENTS = AttributesEnum.CrsOutgoingDocAttachments.index();
  public static final int CRSOUTGOINGDOCCC = AttributesEnum.CrsOutgoingDocCc.index();
  public static final int CRSOUTGOINGDOCPREPARATION = AttributesEnum.CrsOutgoingDocPreparation.index();
  public static final int CRSOUTGOINGRELATEDLETTERS = AttributesEnum.CrsOutgoingRelatedLetters.index();
  public static final int CRSOUTGOINGRELATEDLETTERS1 = AttributesEnum.CrsOutgoingRelatedLetters1.index();
  public static final int HCMDEPARTMENTS = AttributesEnum.HcmDepartments.index();
  public static final int HCMDEPARTMENTS1 = AttributesEnum.HcmDepartments1.index();

  /**
   * This is the default constructor (do not remove).
   */
  public CrsOutgoingDocumentsImpl()
  {
  }

  /**
   * @return the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject()
  {
    return EntityDefImpl.findDefObject("crs.model.eo.CrsOutgoingDocuments");
  }


  /**
   * Gets the attribute value for OutgoingDocumentsPk, using the alias name OutgoingDocumentsPk.
   * @return the value of OutgoingDocumentsPk
   */
  public BigDecimal getOutgoingDocumentsPk()
  {
    return (BigDecimal) getAttributeInternal(OUTGOINGDOCUMENTSPK);
  }

  /**
   * Sets <code>value</code> as the attribute value for OutgoingDocumentsPk.
   * @param value value to set the OutgoingDocumentsPk
   */
  public void setOutgoingDocumentsPk(BigDecimal value)
  {
    setAttributeInternal(OUTGOINGDOCUMENTSPK, value);
  }

  /**
   * Gets the attribute value for OutDocYear, using the alias name OutDocYear.
   * @return the value of OutDocYear
   */
  public BigDecimal getOutDocYear()
  {
    return (BigDecimal) getAttributeInternal(OUTDOCYEAR);
  }

  /**
   * Sets <code>value</code> as the attribute value for OutDocYear.
   * @param value value to set the OutDocYear
   */
  public void setOutDocYear(BigDecimal value)
  {
    setAttributeInternal(OUTDOCYEAR, value);
  }

  /**
   * Gets the attribute value for OutgoingTypeFk, using the alias name OutgoingTypeFk.
   * @return the value of OutgoingTypeFk
   */
  public BigDecimal getOutgoingTypeFk()
  {
    return (BigDecimal) getAttributeInternal(OUTGOINGTYPEFK);
  }

  /**
   * Sets <code>value</code> as the attribute value for OutgoingTypeFk.
   * @param value value to set the OutgoingTypeFk
   */
  public void setOutgoingTypeFk(BigDecimal value)
  {
    setAttributeInternal(OUTGOINGTYPEFK, value);
  }

  /**
   * Gets the attribute value for OutDocNo, using the alias name OutDocNo.
   * @return the value of OutDocNo
   */
  public String getOutDocNo()
  {
    return (String) getAttributeInternal(OUTDOCNO);
  }

  /**
   * Sets <code>value</code> as the attribute value for OutDocNo.
   * @param value value to set the OutDocNo
   */
  public void setOutDocNo(String value)
  {
    setAttributeInternal(OUTDOCNO, value);
  }

  /**
   * Gets the attribute value for OutDocDateG, using the alias name OutDocDateG.
   * @return the value of OutDocDateG
   */
  public Timestamp getOutDocDateG()
  {
    return (Timestamp) getAttributeInternal(OUTDOCDATEG);
  }

  /**
   * Sets <code>value</code> as the attribute value for OutDocDateG.
   * @param value value to set the OutDocDateG
   */
  public void setOutDocDateG(Timestamp value)
  {
    setAttributeInternal(OUTDOCDATEG, value);
  }

  /**
   * Gets the attribute value for OutDocDateH, using the alias name OutDocDateH.
   * @return the value of OutDocDateH
   */
  public BigDecimal getOutDocDateH()
  {
    return (BigDecimal) getAttributeInternal(OUTDOCDATEH);
  }

  /**
   * Sets <code>value</code> as the attribute value for OutDocDateH.
   * @param value value to set the OutDocDateH
   */
  public void setOutDocDateH(BigDecimal value)
  {
    setAttributeInternal(OUTDOCDATEH, value);
  }

  /**
   * Gets the attribute value for OutDocTypeFk, using the alias name OutDocTypeFk.
   * @return the value of OutDocTypeFk
   */
  public BigDecimal getOutDocTypeFk()
  {
    return (BigDecimal) getAttributeInternal(OUTDOCTYPEFK);
  }

  /**
   * Sets <code>value</code> as the attribute value for OutDocTypeFk.
   * @param value value to set the OutDocTypeFk
   */
  public void setOutDocTypeFk(BigDecimal value)
  {
    setAttributeInternal(OUTDOCTYPEFK, value);
  }

  /**
   * Gets the attribute value for FromDepartmentFk, using the alias name FromDepartmentFk.
   * @return the value of FromDepartmentFk
   */
  public BigDecimal getFromDepartmentFk()
  {
    return (BigDecimal) getAttributeInternal(FROMDEPARTMENTFK);
  }

  /**
   * Sets <code>value</code> as the attribute value for FromDepartmentFk.
   * @param value value to set the FromDepartmentFk
   */
  public void setFromDepartmentFk(BigDecimal value)
  {
    setAttributeInternal(FROMDEPARTMENTFK, value);
  }

  /**
   * Gets the attribute value for ToDepartmentFk, using the alias name ToDepartmentFk.
   * @return the value of ToDepartmentFk
   */
  public BigDecimal getToDepartmentFk()
  {
    return (BigDecimal) getAttributeInternal(TODEPARTMENTFK);
  }

  /**
   * Sets <code>value</code> as the attribute value for ToDepartmentFk.
   * @param value value to set the ToDepartmentFk
   */
  public void setToDepartmentFk(BigDecimal value)
  {
    setAttributeInternal(TODEPARTMENTFK, value);
  }

  /**
   * Gets the attribute value for PriorityFk, using the alias name PriorityFk.
   * @return the value of PriorityFk
   */
  public BigDecimal getPriorityFk()
  {
    return (BigDecimal) getAttributeInternal(PRIORITYFK);
  }

  /**
   * Sets <code>value</code> as the attribute value for PriorityFk.
   * @param value value to set the PriorityFk
   */
  public void setPriorityFk(BigDecimal value)
  {
    setAttributeInternal(PRIORITYFK, value);
  }

  /**
   * Gets the attribute value for RespondPeriod, using the alias name RespondPeriod.
   * @return the value of RespondPeriod
   */
  public BigDecimal getRespondPeriod()
  {
    return (BigDecimal) getAttributeInternal(RESPONDPERIOD);
  }

  /**
   * Sets <code>value</code> as the attribute value for RespondPeriod.
   * @param value value to set the RespondPeriod
   */
  public void setRespondPeriod(BigDecimal value)
  {
    setAttributeInternal(RESPONDPERIOD, value);
  }

  /**
   * Gets the attribute value for AttachmentsNo, using the alias name AttachmentsNo.
   * @return the value of AttachmentsNo
   */
  public BigDecimal getAttachmentsNo()
  {
    return (BigDecimal) getAttributeInternal(ATTACHMENTSNO);
  }

  /**
   * Sets <code>value</code> as the attribute value for AttachmentsNo.
   * @param value value to set the AttachmentsNo
   */
  public void setAttachmentsNo(BigDecimal value)
  {
    setAttributeInternal(ATTACHMENTSNO, value);
  }

  /**
   * Gets the attribute value for IncomingDocumentsFk, using the alias name IncomingDocumentsFk.
   * @return the value of IncomingDocumentsFk
   */
  public BigDecimal getIncomingDocumentsFk()
  {
    return (BigDecimal) getAttributeInternal(INCOMINGDOCUMENTSFK);
  }

  /**
   * Sets <code>value</code> as the attribute value for IncomingDocumentsFk.
   * @param value value to set the IncomingDocumentsFk
   */
  public void setIncomingDocumentsFk(BigDecimal value)
  {
    setAttributeInternal(INCOMINGDOCUMENTSFK, value);
  }

  /**
   * Gets the attribute value for FilesLocationFk, using the alias name FilesLocationFk.
   * @return the value of FilesLocationFk
   */
  public BigDecimal getFilesLocationFk()
  {
    return (BigDecimal) getAttributeInternal(FILESLOCATIONFK);
  }

  /**
   * Sets <code>value</code> as the attribute value for FilesLocationFk.
   * @param value value to set the FilesLocationFk
   */
  public void setFilesLocationFk(BigDecimal value)
  {
    setAttributeInternal(FILESLOCATIONFK, value);
  }

  /**
   * Gets the attribute value for Barcode, using the alias name Barcode.
   * @return the value of Barcode
   */
  public BigDecimal getBarcode()
  {
    return (BigDecimal) getAttributeInternal(BARCODE);
  }

  /**
   * Sets <code>value</code> as the attribute value for Barcode.
   * @param value value to set the Barcode
   */
  public void setBarcode(BigDecimal value)
  {
    setAttributeInternal(BARCODE, value);
  }

  /**
   * Gets the attribute value for SecurityLevelFk, using the alias name SecurityLevelFk.
   * @return the value of SecurityLevelFk
   */
  public BigDecimal getSecurityLevelFk()
  {
    return (BigDecimal) getAttributeInternal(SECURITYLEVELFK);
  }

  /**
   * Sets <code>value</code> as the attribute value for SecurityLevelFk.
   * @param value value to set the SecurityLevelFk
   */
  public void setSecurityLevelFk(BigDecimal value)
  {
    setAttributeInternal(SECURITYLEVELFK, value);
  }

  /**
   * Gets the attribute value for ReceivedDateG, using the alias name ReceivedDateG.
   * @return the value of ReceivedDateG
   */
  public Timestamp getReceivedDateG()
  {
    return (Timestamp) getAttributeInternal(RECEIVEDDATEG);
  }

  /**
   * Sets <code>value</code> as the attribute value for ReceivedDateG.
   * @param value value to set the ReceivedDateG
   */
  public void setReceivedDateG(Timestamp value)
  {
    setAttributeInternal(RECEIVEDDATEG, value);
  }

  /**
   * Gets the attribute value for ReceivedDateH, using the alias name ReceivedDateH.
   * @return the value of ReceivedDateH
   */
  public BigDecimal getReceivedDateH()
  {
    return (BigDecimal) getAttributeInternal(RECEIVEDDATEH);
  }

  /**
   * Sets <code>value</code> as the attribute value for ReceivedDateH.
   * @param value value to set the ReceivedDateH
   */
  public void setReceivedDateH(BigDecimal value)
  {
    setAttributeInternal(RECEIVEDDATEH, value);
  }

  /**
   * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
   * @return the value of CreatedBy
   */
  public BigDecimal getCreatedBy()
  {
    return (BigDecimal) getAttributeInternal(CREATEDBY);
  }

  /**
   * Sets <code>value</code> as the attribute value for CreatedBy.
   * @param value value to set the CreatedBy
   */
  public void setCreatedBy(BigDecimal value)
  {
    setAttributeInternal(CREATEDBY, value);
  }

  /**
   * Gets the attribute value for CreationDate, using the alias name CreationDate.
   * @return the value of CreationDate
   */
  public Timestamp getCreationDate()
  {
    return (Timestamp) getAttributeInternal(CREATIONDATE);
  }

  /**
   * Sets <code>value</code> as the attribute value for CreationDate.
   * @param value value to set the CreationDate
   */
  public void setCreationDate(Timestamp value)
  {
    setAttributeInternal(CREATIONDATE, value);
  }

  /**
   * Gets the attribute value for ModifiedBy, using the alias name ModifiedBy.
   * @return the value of ModifiedBy
   */
  public BigDecimal getModifiedBy()
  {
    return (BigDecimal) getAttributeInternal(MODIFIEDBY);
  }

  /**
   * Sets <code>value</code> as the attribute value for ModifiedBy.
   * @param value value to set the ModifiedBy
   */
  public void setModifiedBy(BigDecimal value)
  {
    setAttributeInternal(MODIFIEDBY, value);
  }

  /**
   * Gets the attribute value for ModifiedDate, using the alias name ModifiedDate.
   * @return the value of ModifiedDate
   */
  public Timestamp getModifiedDate()
  {
    return (Timestamp) getAttributeInternal(MODIFIEDDATE);
  }

  /**
   * Sets <code>value</code> as the attribute value for ModifiedDate.
   * @param value value to set the ModifiedDate
   */
  public void setModifiedDate(Timestamp value)
  {
    setAttributeInternal(MODIFIEDDATE, value);
  }

  /**
   * Gets the attribute value for UserDepartmentFk, using the alias name UserDepartmentFk.
   * @return the value of UserDepartmentFk
   */
  public BigDecimal getUserDepartmentFk()
  {
    return (BigDecimal) getAttributeInternal(USERDEPARTMENTFK);
  }

  /**
   * Sets <code>value</code> as the attribute value for UserDepartmentFk.
   * @param value value to set the UserDepartmentFk
   */
  public void setUserDepartmentFk(BigDecimal value)
  {
    setAttributeInternal(USERDEPARTMENTFK, value);
  }

  /**
   * Gets the attribute value for ClassificationFk, using the alias name ClassificationFk.
   * @return the value of ClassificationFk
   */
  public BigDecimal getClassificationFk()
  {
    return (BigDecimal) getAttributeInternal(CLASSIFICATIONFK);
  }

  /**
   * Sets <code>value</code> as the attribute value for ClassificationFk.
   * @param value value to set the ClassificationFk
   */
  public void setClassificationFk(BigDecimal value)
  {
    setAttributeInternal(CLASSIFICATIONFK, value);
  }

  /**
   * Gets the attribute value for DisplayOutSubject, using the alias name DisplayOutSubject.
   * @return the value of DisplayOutSubject
   */
  public String getDisplayOutSubject()
  {
    return (String) getAttributeInternal(DISPLAYOUTSUBJECT);
  }

  /**
   * Sets <code>value</code> as the attribute value for DisplayOutSubject.
   * @param value value to set the DisplayOutSubject
   */
  public void setDisplayOutSubject(String value)
  {
    setAttributeInternal(DISPLAYOUTSUBJECT, value);
  }

  /**
   * Gets the attribute value for DisplayKeyword, using the alias name DisplayKeyword.
   * @return the value of DisplayKeyword
   */
  public String getDisplayKeyword()
  {
    return (String) getAttributeInternal(DISPLAYKEYWORD);
  }

  /**
   * Sets <code>value</code> as the attribute value for DisplayKeyword.
   * @param value value to set the DisplayKeyword
   */
  public void setDisplayKeyword(String value)
  {
    setAttributeInternal(DISPLAYKEYWORD, value);
  }

  /**
   * Gets the attribute value for DisplayNotes, using the alias name DisplayNotes.
   * @return the value of DisplayNotes
   */
  public String getDisplayNotes()
  {
    return (String) getAttributeInternal(DISPLAYNOTES);
  }

  /**
   * Sets <code>value</code> as the attribute value for DisplayNotes.
   * @param value value to set the DisplayNotes
   */
  public void setDisplayNotes(String value)
  {
    setAttributeInternal(DISPLAYNOTES, value);
  }

  /**
   * Gets the attribute value for OutText, using the alias name OutText.
   * @return the value of OutText
   */
  public String getOutText()
  {
    return (String) getAttributeInternal(OUTTEXT);
  }

  /**
   * Sets <code>value</code> as the attribute value for OutText.
   * @param value value to set the OutText
   */
  public void setOutText(String value)
  {
    setAttributeInternal(OUTTEXT, value);
  }

  /**
   * Gets the attribute value for OutgoingDocumentsNo, using the alias name OutgoingDocumentsNo.
   * @return the value of OutgoingDocumentsNo
   */
  public BigDecimal getOutgoingDocumentsNo()
  {
    return (BigDecimal) getAttributeInternal(OUTGOINGDOCUMENTSNO);
  }

  /**
   * Sets <code>value</code> as the attribute value for OutgoingDocumentsNo.
   * @param value value to set the OutgoingDocumentsNo
   */
  public void setOutgoingDocumentsNo(BigDecimal value)
  {
    setAttributeInternal(OUTGOINGDOCUMENTSNO, value);
  }

  /**
   * Gets the attribute value for RejectedFk, using the alias name RejectedFk.
   * @return the value of RejectedFk
   */
  public BigDecimal getRejectedFk()
  {
    return (BigDecimal) getAttributeInternal(REJECTEDFK);
  }

  /**
   * Sets <code>value</code> as the attribute value for RejectedFk.
   * @param value value to set the RejectedFk
   */
  public void setRejectedFk(BigDecimal value)
  {
    setAttributeInternal(REJECTEDFK, value);
  }

  /**
   * Gets the attribute value for RejectedFl, using the alias name RejectedFl.
   * @return the value of RejectedFl
   */
  public BigDecimal getRejectedFl()
  {
    return (BigDecimal) getAttributeInternal(REJECTEDFL);
  }

  /**
   * Sets <code>value</code> as the attribute value for RejectedFl.
   * @param value value to set the RejectedFl
   */
  public void setRejectedFl(BigDecimal value)
  {
    setAttributeInternal(REJECTEDFL, value);
  }

  /**
   * Gets the attribute value for RejectedReason, using the alias name RejectedReason.
   * @return the value of RejectedReason
   */
  public String getRejectedReason()
  {
    return (String) getAttributeInternal(REJECTEDREASON);
  }

  /**
   * Sets <code>value</code> as the attribute value for RejectedReason.
   * @param value value to set the RejectedReason
   */
  public void setRejectedReason(String value)
  {
    setAttributeInternal(REJECTEDREASON, value);
  }

  /**
   * Gets the attribute value for SupplyFl, using the alias name SupplyFl.
   * @return the value of SupplyFl
   */
  public BigDecimal getSupplyFl()
  {
    return (BigDecimal) getAttributeInternal(SUPPLYFL);
  }

  /**
   * Sets <code>value</code> as the attribute value for SupplyFl.
   * @param value value to set the SupplyFl
   */
  public void setSupplyFl(BigDecimal value)
  {
    setAttributeInternal(SUPPLYFL, value);
  }

  /**
   * Gets the attribute value for DistributionTypeFk, using the alias name DistributionTypeFk.
   * @return the value of DistributionTypeFk
   */
  public BigDecimal getDistributionTypeFk()
  {
    return (BigDecimal) getAttributeInternal(DISTRIBUTIONTYPEFK);
  }

  /**
   * Sets <code>value</code> as the attribute value for DistributionTypeFk.
   * @param value value to set the DistributionTypeFk
   */
  public void setDistributionTypeFk(BigDecimal value)
  {
    setAttributeInternal(DISTRIBUTIONTYPEFK, value);
  }

  /**
   * Gets the attribute value for OutingDocStsFk, using the alias name OutingDocStsFk.
   * @return the value of OutingDocStsFk
   */
  public BigDecimal getOutingDocStsFk()
  {
    return (BigDecimal) getAttributeInternal(OUTINGDOCSTSFK);
  }

  /**
   * Sets <code>value</code> as the attribute value for OutingDocStsFk.
   * @param value value to set the OutingDocStsFk
   */
  public void setOutingDocStsFk(BigDecimal value)
  {
    setAttributeInternal(OUTINGDOCSTSFK, value);
  }

  /**
   * Gets the attribute value for NumberingDependencyFk, using the alias name NumberingDependencyFk.
   * @return the value of NumberingDependencyFk
   */
  public BigDecimal getNumberingDependencyFk()
  {
    return (BigDecimal) getAttributeInternal(NUMBERINGDEPENDENCYFK);
  }

  /**
   * Sets <code>value</code> as the attribute value for NumberingDependencyFk.
   * @param value value to set the NumberingDependencyFk
   */
  public void setNumberingDependencyFk(BigDecimal value)
  {
    setAttributeInternal(NUMBERINGDEPENDENCYFK, value);
  }

  /**
   * @return the associated entity oracle.jbo.RowIterator.
   */
  public RowIterator getCrsOutgoingBeneficiaries()
  {
    return (RowIterator) getAttributeInternal(CRSOUTGOINGBENEFICIARIES);
  }

  /**
   * @return the associated entity oracle.jbo.RowIterator.
   */
  public RowIterator getCrsDocumentsDelivery()
  {
    return (RowIterator) getAttributeInternal(CRSDOCUMENTSDELIVERY);
  }

  /**
   * @return the associated entity oracle.jbo.RowIterator.
   */
  public RowIterator getCrsBorrowRequests()
  {
    return (RowIterator) getAttributeInternal(CRSBORROWREQUESTS);
  }

  /**
   * @return the associated entity oracle.jbo.RowIterator.
   */
  public RowIterator getCrsOutgoingArchive()
  {
    return (RowIterator) getAttributeInternal(CRSOUTGOINGARCHIVE);
  }

  /**
   * @return the associated entity oracle.jbo.RowIterator.
   */
  public RowIterator getCrsIncomingDocuments()
  {
    return (RowIterator) getAttributeInternal(CRSINCOMINGDOCUMENTS);
  }

  /**
   * @return the associated entity oracle.jbo.RowIterator.
   */
  public RowIterator getCrsIncomingRelatedLetters()
  {
    return (RowIterator) getAttributeInternal(CRSINCOMINGRELATEDLETTERS);
  }

  /**
   * @return the associated entity oracle.jbo.RowIterator.
   */
  public RowIterator getCrsOutgoingComments()
  {
    return (RowIterator) getAttributeInternal(CRSOUTGOINGCOMMENTS);
  }

  /**
   * @return the associated entity CrsIncomingDocumentsImpl.
   */
  public CrsIncomingDocumentsImpl getCrsIncomingDocuments1()
  {
    return (CrsIncomingDocumentsImpl) getAttributeInternal(CRSINCOMINGDOCUMENTS1);
  }

  /**
   * Sets <code>value</code> as the associated entity CrsIncomingDocumentsImpl.
   */
  public void setCrsIncomingDocuments1(CrsIncomingDocumentsImpl value)
  {
    setAttributeInternal(CRSINCOMINGDOCUMENTS1, value);
  }

  /**
   * @return the associated entity CrsFilesLocationImpl.
   */
  public CrsFilesLocationImpl getCrsFilesLocation()
  {
    return (CrsFilesLocationImpl) getAttributeInternal(CRSFILESLOCATION);
  }

  /**
   * Sets <code>value</code> as the associated entity CrsFilesLocationImpl.
   */
  public void setCrsFilesLocation(CrsFilesLocationImpl value)
  {
    setAttributeInternal(CRSFILESLOCATION, value);
  }

  /**
   * @return the associated entity oracle.jbo.RowIterator.
   */
  public RowIterator getCrsOutgoingDocumentsTl()
  {
    return (RowIterator) getAttributeInternal(CRSOUTGOINGDOCUMENTSTL);
  }

  /**
   * @return the associated entity oracle.jbo.RowIterator.
   */
  public RowIterator getCrsOutgoingDocAttachments()
  {
    return (RowIterator) getAttributeInternal(CRSOUTGOINGDOCATTACHMENTS);
  }

  /**
   * @return the associated entity oracle.jbo.RowIterator.
   */
  public RowIterator getCrsOutgoingDocCc()
  {
    return (RowIterator) getAttributeInternal(CRSOUTGOINGDOCCC);
  }

  /**
   * @return the associated entity oracle.jbo.RowIterator.
   */
  public RowIterator getCrsOutgoingDocPreparation()
  {
    return (RowIterator) getAttributeInternal(CRSOUTGOINGDOCPREPARATION);
  }

  /**
   * @return the associated entity oracle.jbo.RowIterator.
   */
  public RowIterator getCrsOutgoingRelatedLetters()
  {
    return (RowIterator) getAttributeInternal(CRSOUTGOINGRELATEDLETTERS);
  }

  /**
   * @return the associated entity oracle.jbo.RowIterator.
   */
  public RowIterator getCrsOutgoingRelatedLetters1()
  {
    return (RowIterator) getAttributeInternal(CRSOUTGOINGRELATEDLETTERS1);
  }


  /**
   * @return the associated entity HcmDepartmentsImpl.
   */
  public HcmDepartmentsImpl getHcmDepartments()
  {
    return (HcmDepartmentsImpl) getAttributeInternal(HCMDEPARTMENTS);
  }

  /**
   * Sets <code>value</code> as the associated entity HcmDepartmentsImpl.
   */
  public void setHcmDepartments(HcmDepartmentsImpl value)
  {
    setAttributeInternal(HCMDEPARTMENTS, value);
  }

  /**
   * @return the associated entity HcmDepartmentsImpl.
   */
  public HcmDepartmentsImpl getHcmDepartments1()
  {
    return (HcmDepartmentsImpl) getAttributeInternal(HCMDEPARTMENTS1);
  }

  /**
   * Sets <code>value</code> as the associated entity HcmDepartmentsImpl.
   */
  public void setHcmDepartments1(HcmDepartmentsImpl value)
  {
    setAttributeInternal(HCMDEPARTMENTS1, value);
  }


  /**
   * @param outgoingDocumentsPk key constituent

   * @return a Key object based on given key constituents.
   */
  public static Key createPrimaryKey(BigDecimal outgoingDocumentsPk)
  {
    return new Key(new Object[] { outgoingDocumentsPk });
  }

  protected void create(AttributeList attributeList)
  {
    super.create(attributeList);
    setOutDocYear(GenLib.getCurrentYear());
    setFromDepartmentFk(GenLib.getUserLoginDepartment());
    setOutDocDateG(GenLib.getCurrentDate());
    setOutDocDateH(HijriUtil.getTodayHijriBigDecimalWithDate());
    setUserDepartmentFk(GenLib.getUserLoginDepartment());
    setNumberingDependencyFk(ControllerUtil.getNumberingDependencyFk());
  }

  protected void doDML(int operation, oracle.jbo.server.TransactionEvent e)
  {
    if (operation == DML_INSERT && getOutgoingDocumentsNo() == null){
      setOutgoingDocumentsNo(getMaxSerialForOutgoingDocumentNo());
      setBarcode(getMaxSerialForOutgoingDocumentNo());
    }
   
   if(operation == DML_INSERT || operation == DML_UPDATE ){
     if(getOutgoingTypeFk().equals(new BigDecimal(Constants.OUTING_INTERNAL_MEMO) ) || getOutgoingTypeFk().equals(new BigDecimal(Constants.OUTING_INTERNAL_DOC) ) ){
        setOutingDocStsFk(new BigDecimal(Constants.OUTING_DOC_STS_FK));
        } 
    }
    super.doDML(operation, e);

    if (operation == DML_INSERT){
      BigDecimal outgoingDocumentsPk = gen.common.GenLib.getPrimaryKeyValue(getDBTransaction(), "CRS_OUTGOING_DOCUMENTS_SEQ");
      setOutgoingDocumentsPk(outgoingDocumentsPk);
      insertIntoCrsOutgoingDocAttachTl();
    }
  }

  private void insertIntoCrsOutgoingDocAttachTl(){
    
    oracle.jbo.server.EntityDefImpl crsOutgoingDocumentsTlDef = CrsOutgoingDocumentsTlImpl.getDefinitionObject();
    List<Integer> activeLanguages = GenLib.getActiveDataLanguages(getDBTransaction());
    for (Integer languageId : activeLanguages){
      CrsOutgoingDocumentsTlImpl crsOutgoingDocumentsTl = (CrsOutgoingDocumentsTlImpl) crsOutgoingDocumentsTlDef.
                                                                  createInstance2(getDBTransaction(), null);
      crsOutgoingDocumentsTl.setLanguagesFk(BigDecimal.valueOf(languageId));
      crsOutgoingDocumentsTl.setOutSubject(getDisplayOutSubject());
      crsOutgoingDocumentsTl.setOutgoingDocumentsFk(getOutgoingDocumentsPk());
      crsOutgoingDocumentsTl.setKeyword(getDisplayKeyword());
      crsOutgoingDocumentsTl.setNotes(getDisplayNotes());
    }
  }
  
  private BigDecimal getMaxSerialForOutgoingDocumentNo() {
          BigDecimal maxOutgoingDocumentsNo = new BigDecimal(0);
          BigDecimal crsNumberingTypeFk = Settings.getSettings().getCrsNumberingTypeFk();
          BigDecimal employerLevel = BigDecimal.valueOf(Constants.EMPLOYER_LEVEL);
          BigDecimal departmentLevel = BigDecimal.valueOf(Constants.DEPARTMENT_LEVEL);

          if (employerLevel.equals(crsNumberingTypeFk)) {
              maxOutgoingDocumentsNo = getMaxSerialForEmployerLevel();
          } else if (departmentLevel.equals(crsNumberingTypeFk)) {
              maxOutgoingDocumentsNo = getMaxSerialForDepartmentLevel();
          }

          return maxOutgoingDocumentsNo;
      }
  
  private BigDecimal getMaxSerialForDepartmentLevel() {
          StringBuilder whereConditions = new StringBuilder();
          whereConditions.append(" where NUMBERING_DEPENDENCY_FK = ").append(getNumberingDependencyFk());
          whereConditions.append(" and OUT_DOC_YEAR = ").append(getOutDocYear());

          if (getOutgoingTypeFk().equals(new BigDecimal(Constants.OUTING_INTERNAL_MEMO))) {
              whereConditions.append(" and OUTGOING_TYPE_FK = ").append(getOutgoingTypeFk());
          }
      return GenLib.getNextMax(getDBTransaction(), "CRS_OUTGOING_DOCUMENTS", "OUTGOING_DOCUMENTS_NO", whereConditions.toString());
  }
  
  private BigDecimal getMaxSerialForEmployerLevel() {
          String whereClause = "WHERE OUT_DOC_YEAR = " + getOutDocYear();
          return GenLib.getNextMax(getDBTransaction(), "CRS_OUTGOING_DOCUMENTS", "OUTGOING_DOCUMENTS_NO", whereClause);
      }
  
  public void remove(){
    GenLib.removeTranlationRows(getCrsOutgoingDocumentsTl());
    super.remove();
  }
}