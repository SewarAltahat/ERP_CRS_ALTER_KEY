package crs.model.eo;

import gen.common.GenConstants;
import gen.common.GenLib;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Apr 01 13:35:10 GMT+03:00 2023
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CrsOutgoingRelatedLettersImpl
  extends AuditEntityImpl
{
  /**
   * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
   */
  protected enum AttributesEnum
  {
    OutgoingRelatedLettersPk,
    OutgoingDocumentsFk,
    OutgoingDocPreparationFk,
    RelatedOutgoingDocumentFk,
    CreatedBy,
    CreationDate,
    ModifiedBy,
    ModifiedDate,
    UserDepartmentFk,
    RelatedIncomingDocumentsFk,
    RelatedDocumentTypeFk,
    CrsOutgoingDocuments,
    CrsOutgoingDocuments1,
    CrsOutgoingDocPreparation,
    CrsIncomingDocuments;
    private static AttributesEnum[] vals = null;
    private static final int firstIndex = 0;

    protected int index()
    {
      return AttributesEnum.firstIndex() + ordinal();
    }

    protected static final int firstIndex()
    {
      return firstIndex;
    }

    protected static int count()
    {
      return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
    }

    protected static final AttributesEnum[] staticValues()
    {
      if (vals == null)
      {
        vals = AttributesEnum.values();
      }
      return vals;
    }
  }

  public static final int OUTGOINGRELATEDLETTERSPK = AttributesEnum.OutgoingRelatedLettersPk.index();
  public static final int OUTGOINGDOCUMENTSFK = AttributesEnum.OutgoingDocumentsFk.index();
  public static final int OUTGOINGDOCPREPARATIONFK = AttributesEnum.OutgoingDocPreparationFk.index();
  public static final int RELATEDOUTGOINGDOCUMENTFK = AttributesEnum.RelatedOutgoingDocumentFk.index();
  public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
  public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
  public static final int MODIFIEDBY = AttributesEnum.ModifiedBy.index();
  public static final int MODIFIEDDATE = AttributesEnum.ModifiedDate.index();
  public static final int USERDEPARTMENTFK = AttributesEnum.UserDepartmentFk.index();
  public static final int RELATEDINCOMINGDOCUMENTSFK = AttributesEnum.RelatedIncomingDocumentsFk.index();
  public static final int RELATEDDOCUMENTTYPEFK = AttributesEnum.RelatedDocumentTypeFk.index();
  public static final int CRSOUTGOINGDOCUMENTS = AttributesEnum.CrsOutgoingDocuments.index();
  public static final int CRSOUTGOINGDOCUMENTS1 = AttributesEnum.CrsOutgoingDocuments1.index();
  public static final int CRSOUTGOINGDOCPREPARATION = AttributesEnum.CrsOutgoingDocPreparation.index();
  public static final int CRSINCOMINGDOCUMENTS = AttributesEnum.CrsIncomingDocuments.index();

  /**
   * This is the default constructor (do not remove).
   */
  public CrsOutgoingRelatedLettersImpl()
  {
  }

  /**
   * @return the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject()
  {
    return EntityDefImpl.findDefObject("crs.model.eo.CrsOutgoingRelatedLetters");
  }

  /**
   * Gets the attribute value for OutgoingRelatedLettersPk, using the alias name OutgoingRelatedLettersPk.
   * @return the value of OutgoingRelatedLettersPk
   */
  public BigDecimal getOutgoingRelatedLettersPk()
  {
    return (BigDecimal) getAttributeInternal(OUTGOINGRELATEDLETTERSPK);
  }

  /**
   * Sets <code>value</code> as the attribute value for OutgoingRelatedLettersPk.
   * @param value value to set the OutgoingRelatedLettersPk
   */
  public void setOutgoingRelatedLettersPk(BigDecimal value)
  {
    setAttributeInternal(OUTGOINGRELATEDLETTERSPK, value);
  }

  /**
   * Gets the attribute value for OutgoingDocumentsFk, using the alias name OutgoingDocumentsFk.
   * @return the value of OutgoingDocumentsFk
   */
  public BigDecimal getOutgoingDocumentsFk()
  {
    return (BigDecimal) getAttributeInternal(OUTGOINGDOCUMENTSFK);
  }

  /**
   * Sets <code>value</code> as the attribute value for OutgoingDocumentsFk.
   * @param value value to set the OutgoingDocumentsFk
   */
  public void setOutgoingDocumentsFk(BigDecimal value)
  {
    setAttributeInternal(OUTGOINGDOCUMENTSFK, value);
  }

  /**
   * Gets the attribute value for OutgoingDocPreparationFk, using the alias name OutgoingDocPreparationFk.
   * @return the value of OutgoingDocPreparationFk
   */
  public BigDecimal getOutgoingDocPreparationFk()
  {
    return (BigDecimal) getAttributeInternal(OUTGOINGDOCPREPARATIONFK);
  }

  /**
   * Sets <code>value</code> as the attribute value for OutgoingDocPreparationFk.
   * @param value value to set the OutgoingDocPreparationFk
   */
  public void setOutgoingDocPreparationFk(BigDecimal value)
  {
    setAttributeInternal(OUTGOINGDOCPREPARATIONFK, value);
  }

  /**
   * Gets the attribute value for RelatedOutgoingDocumentFk, using the alias name RelatedOutgoingDocumentFk.
   * @return the value of RelatedOutgoingDocumentFk
   */
  public BigDecimal getRelatedOutgoingDocumentFk()
  {
    return (BigDecimal) getAttributeInternal(RELATEDOUTGOINGDOCUMENTFK);
  }

  /**
   * Sets <code>value</code> as the attribute value for RelatedOutgoingDocumentFk.
   * @param value value to set the RelatedOutgoingDocumentFk
   */
  public void setRelatedOutgoingDocumentFk(BigDecimal value)
  {
    setAttributeInternal(RELATEDOUTGOINGDOCUMENTFK, value);
  }

  /**
   * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
   * @return the value of CreatedBy
   */
  public BigDecimal getCreatedBy()
  {
    return (BigDecimal) getAttributeInternal(CREATEDBY);
  }

  /**
   * Sets <code>value</code> as the attribute value for CreatedBy.
   * @param value value to set the CreatedBy
   */
  public void setCreatedBy(BigDecimal value)
  {
    setAttributeInternal(CREATEDBY, value);
  }

  /**
   * Gets the attribute value for CreationDate, using the alias name CreationDate.
   * @return the value of CreationDate
   */
  public Timestamp getCreationDate()
  {
    return (Timestamp) getAttributeInternal(CREATIONDATE);
  }

  /**
   * Sets <code>value</code> as the attribute value for CreationDate.
   * @param value value to set the CreationDate
   */
  public void setCreationDate(Timestamp value)
  {
    setAttributeInternal(CREATIONDATE, value);
  }

  /**
   * Gets the attribute value for ModifiedBy, using the alias name ModifiedBy.
   * @return the value of ModifiedBy
   */
  public BigDecimal getModifiedBy()
  {
    return (BigDecimal) getAttributeInternal(MODIFIEDBY);
  }

  /**
   * Sets <code>value</code> as the attribute value for ModifiedBy.
   * @param value value to set the ModifiedBy
   */
  public void setModifiedBy(BigDecimal value)
  {
    setAttributeInternal(MODIFIEDBY, value);
  }

  /**
   * Gets the attribute value for ModifiedDate, using the alias name ModifiedDate.
   * @return the value of ModifiedDate
   */
  public Timestamp getModifiedDate()
  {
    return (Timestamp) getAttributeInternal(MODIFIEDDATE);
  }

  /**
   * Sets <code>value</code> as the attribute value for ModifiedDate.
   * @param value value to set the ModifiedDate
   */
  public void setModifiedDate(Timestamp value)
  {
    setAttributeInternal(MODIFIEDDATE, value);
  }

  /**
   * Gets the attribute value for UserDepartmentFk, using the alias name UserDepartmentFk.
   * @return the value of UserDepartmentFk
   */
  public BigDecimal getUserDepartmentFk()
  {
    return (BigDecimal) getAttributeInternal(USERDEPARTMENTFK);
  }

  /**
   * Sets <code>value</code> as the attribute value for UserDepartmentFk.
   * @param value value to set the UserDepartmentFk
   */
  public void setUserDepartmentFk(BigDecimal value)
  {
    setAttributeInternal(USERDEPARTMENTFK, value);
  }

  /**
   * Gets the attribute value for RelatedIncomingDocumentsFk, using the alias name RelatedIncomingDocumentsFk.
   * @return the value of RelatedIncomingDocumentsFk
   */
  public BigDecimal getRelatedIncomingDocumentsFk()
  {
    return (BigDecimal) getAttributeInternal(RELATEDINCOMINGDOCUMENTSFK);
  }

  /**
   * Sets <code>value</code> as the attribute value for RelatedIncomingDocumentsFk.
   * @param value value to set the RelatedIncomingDocumentsFk
   */
  public void setRelatedIncomingDocumentsFk(BigDecimal value)
  {
    setAttributeInternal(RELATEDINCOMINGDOCUMENTSFK, value);
  }

  /**
   * Gets the attribute value for RelatedDocumentTypeFk, using the alias name RelatedDocumentTypeFk.
   * @return the value of RelatedDocumentTypeFk
   */
  public BigDecimal getRelatedDocumentTypeFk()
  {
    return (BigDecimal) getAttributeInternal(RELATEDDOCUMENTTYPEFK);
  }

  /**
   * Sets <code>value</code> as the attribute value for RelatedDocumentTypeFk.
   * @param value value to set the RelatedDocumentTypeFk
   */
  public void setRelatedDocumentTypeFk(BigDecimal value)
  {
    setAttributeInternal(RELATEDDOCUMENTTYPEFK, value);
  }

  /**
   * @return the associated entity CrsOutgoingDocumentsImpl.
   */
  public CrsOutgoingDocumentsImpl getCrsOutgoingDocuments()
  {
    return (CrsOutgoingDocumentsImpl) getAttributeInternal(CRSOUTGOINGDOCUMENTS);
  }

  /**
   * Sets <code>value</code> as the associated entity CrsOutgoingDocumentsImpl.
   */
  public void setCrsOutgoingDocuments(CrsOutgoingDocumentsImpl value)
  {
    setAttributeInternal(CRSOUTGOINGDOCUMENTS, value);
  }

  /**
   * @return the associated entity CrsOutgoingDocumentsImpl.
   */
  public CrsOutgoingDocumentsImpl getCrsOutgoingDocuments1()
  {
    return (CrsOutgoingDocumentsImpl) getAttributeInternal(CRSOUTGOINGDOCUMENTS1);
  }

  /**
   * Sets <code>value</code> as the associated entity CrsOutgoingDocumentsImpl.
   */
  public void setCrsOutgoingDocuments1(CrsOutgoingDocumentsImpl value)
  {
    setAttributeInternal(CRSOUTGOINGDOCUMENTS1, value);
  }

  /**
   * @return the associated entity CrsOutgoingDocPreparationImpl.
   */
  public CrsOutgoingDocPreparationImpl getCrsOutgoingDocPreparation()
  {
    return (CrsOutgoingDocPreparationImpl) getAttributeInternal(CRSOUTGOINGDOCPREPARATION);
  }

  /**
   * Sets <code>value</code> as the associated entity CrsOutgoingDocPreparationImpl.
   */
  public void setCrsOutgoingDocPreparation(CrsOutgoingDocPreparationImpl value)
  {
    setAttributeInternal(CRSOUTGOINGDOCPREPARATION, value);
  }

  /**
   * @return the associated entity CrsIncomingDocumentsImpl.
   */
  public CrsIncomingDocumentsImpl getCrsIncomingDocuments()
  {
    return (CrsIncomingDocumentsImpl) getAttributeInternal(CRSINCOMINGDOCUMENTS);
  }

  /**
   * Sets <code>value</code> as the associated entity CrsIncomingDocumentsImpl.
   */
  public void setCrsIncomingDocuments(CrsIncomingDocumentsImpl value)
  {
    setAttributeInternal(CRSINCOMINGDOCUMENTS, value);
  }

  /**
   * @param outgoingRelatedLettersPk key constituent

   * @return a Key object based on given key constituents.
   */
  public static Key createPrimaryKey(BigDecimal outgoingRelatedLettersPk)
  {
    return new Key(new Object[] { outgoingRelatedLettersPk });
  }

  protected void doDML(int operation, oracle.jbo.server.TransactionEvent e){
    if (operation != DML_DELETE && getRelatedDocumentTypeFk() != null) {
      checkIfRelatedDocumentIsNull(getRelatedDocumentTypeFk());
    }
    
    super.doDML(operation, e);

    if (operation == DML_INSERT){
      BigDecimal outgoingRelatedLettersPk = gen.common.GenLib.getPrimaryKeyValue(getDBTransaction(), "CRS_OUTGOING_RELATED_LETTERS_SEQ");
      setOutgoingRelatedLettersPk(outgoingRelatedLettersPk);
    }
  }
  
  private void checkIfRelatedDocumentIsNull(BigDecimal RelatedDocumentTypeFk){
    if (RelatedDocumentTypeFk.equals(new BigDecimal(GenConstants.INCOMING_DOCUMENT)) 
        && getRelatedIncomingDocumentsFk() == null) {
      throw new JboException(GenLib.getMessage("error.RelatedIncomingDocumentFk"));
    }
    if (RelatedDocumentTypeFk.equals(new BigDecimal(GenConstants.OUTGOING_DOCUMENT)) 
        && getRelatedOutgoingDocumentFk() == null) {
      throw new JboException(GenLib.getMessage("error.RelatedOutgoingDocumentsFk"));
    }
  }
}